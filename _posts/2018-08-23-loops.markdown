---
layout: post
title: "Loops"
date: "2018-08-23 16:16:27 -0700"
categories: Notes
tags: JavaScript
description: How to repeatedly executing a code? & FizzBuzz Example
---

üîç [While Loops](#while-loops) üîç [FizzBuzz example](#fizzbuzz-example) üîç [For Loops](#for-loops)

---

Loops will let you iterate over values and repeatedly run a block of code.

## While Loops

There are many different kinds of loops, but they all essentially do the same thing: they repeat an action some number of times.

Three main pieces of information that any loop should have are:

  - When to start: The code that sets up the loop ‚Äî defining the starting value of a variable for instance.

  - When to stop: The logical condition to test whether the loop should continue.

  - How to get to the next item: The incrementing or decrementing step ‚Äî for example, `x = x * 3` or `x = x - 1`

Here's a basic while loop example that includes all three parts.

{% highlight js %}
var start = 0; // when to start
while (start < 10) { // when to stop
  console.log(start);
  start = start + 2; // how to get to the next item
}
{% endhighlight %}

Console will print:
`0
2
4
6
8`

üí• If a loop is missing any of these three things, then you might find yourself in trouble. For instance, a missing stop condition can result in a loop that never ends!

{% highlight js %}
//Don't run this code!
while (true) {
  console.log("true is never false, so I will never stop!");
}
{% endhighlight %}

üí• If you did try to run that code in the console, you probably crashed your browser tab. End the infinite loop by... [Chrome] go to the taskbar and select Window > Task Manager. You can end the process for the particular tab you ran the script in through the task manager.

Here's an example where a loop is missing how to get to the next item; the variable x is never incremented. x will remain 0 throughout the program, so the loop will never end. This code will also crash your browser tab!!!

{% highlight js %}
//Don't run this code!
var x = 0;

while (x < 1) {
  console.log('Oops! x is never incremented from 0, so i will ALWAYS be less than 1');
}
{% endhighlight %}

## FizzBuzz example

"Fizzbuzz" is a famous interview question used in programming interviews. It goes something like this:

  - Loop through the numbers 1 to 100

  - If the number is divisible by 3, print "Fizz"

  - If the number is divisible by 5, print "Buzz"

  - If the number is divisible by both 3 and 5, print "FizzBuzz"

  - If the number is not divisible by 3 or 5, print the number

üí• A number `x` is divisible by a number `y` if the answer to `x / y` has a remainder of `0`. For example, 10 is divisible by `2` because `10 / 2 = 5` with no remainder. You can check if a number is divisible by another number by checking if `x` % `y === 0`.

We're going to have you program your own version of FizzBuzz called `"JuliaJames"` (yes, imaginative, right?) Keep in mind that in an interview, you would want to write efficient code with very little duplication. We don't want you to worry about that for this question. Just focus on practicing using loops.

#### Directions: Write a while loop that...

  - Loop through the numbers 1 to 20

  - If the number is divisible by 3, print "Julia"

  - If the number is divisible by 5, print "James"

  - If the number is divisible by 3 and 5, print "JuliaJames"

  - If the number is not divisible by 3 or 5, print the number

{% highlight js %}

var x = 1;

while (x<=20) {
    if (x%3===0 && x%5===0){
        console.log("JuliaJames");
    }else if (x%3===0){
        console.log("Julia");
    }else if (x%5===0){
        console.log("James");
    }else{
        console.log(x);
    }
    x=x+1;
}
{% endhighlight %}

üëì See another example of [FizzBuzz]({% post_url 2018-07-10-fizz-buzz %})

## Another Loop example

Write a loop that prints out the following song. Starting at 99, and ending at 1 bottle.

99 bottles of juice on the wall! 99 bottles of juice! Take one down, pass it around... 98 bottles of juice on the wall!

98 bottles of juice on the wall! 98 bottles of juice! Take one down, pass it around... 97 bottles of juice on the wall!

...

2 bottles of juice on the wall! 2 bottles of juice! Take one down, pass it around... 1 bottle of juice on the wall!

1 bottle of juice on the wall! 1 bottle of juice! Take one down, pass it around... 0 bottles of juice on the wall!

Some Notes:

  - Note the pluralization of the word "bottle" when you go from 2 bottles to 1 bottle.

  - Your text editor may try to autocorrect your ellipses (...) to the ellipses character (...). Do not use the ellipses character for this quiz; use three consecutive periods instead.

{% highlight js %}
var num = 99;

while (num >= 1 // your stop condition goes here //) {
    // check value of num
    // print lyrics using num
    // don't forget to check pluralization on the last line!
    // decrement num
    if (num === 1) {
        console.log(num + " bottle of juice on the wall! " + num + " bottle of juice!" +
        " Take one down, pass it around... " + (num-1) + " bottles of juice on the wall!");}
    else if (num === 2) {
        console.log(num + " bottles of juice on the wall! " + num + " bottles of juice!" +
        " Take one down, pass it around... " + (num-1) + " bottle of juice on the wall!");}
    else {
        console.log(num + " bottles of juice on the wall! " + num + " bottles of juice!" +
        " Take one down, pass it around... " + (num-1) + " bottles of juice on the wall!");
    }
num = num - 1;
}
{% endhighlight %}

## Countdown Loop example

NASA's countdown to launch includes checkpoints where NASA engineers complete certain technical tasks. During the final minute, NASA has 6 tasks to complete:

  - Orbiter transfers from ground to internal power (T-50 seconds)
  Ground launch sequencer is go for auto sequence start (T-31 seconds)

  - Activate launch pad sound suppression system (T-16 seconds)

  - Activate main engine hydrogen burnoff system (T-10 seconds)

  - Main engine start (T-6 seconds)

  - Solid rocket booster ignition and liftoff! (T-0 seconds)

Note: "T-50 seconds" read as "T-minus 50 seconds".

Directions:

Write a while loop that counts down from 60 seconds and:

  - If there's a task being completed, it prints out the task

  - If there is no task being completed, it prints out the time as T-x seconds

Use the task and time descriptions described above.

{% highlight js %}
var x=60;

while (x >=0){
    if (x===0){
        console.log("Solid rocket booster ignition and liftoff!");}
    else if (x===6){
        console.log("Main engine start");}
    else if (x===10){
        console.log("Activate main engine hydrogen burnoff system");}
    else if (x===16){
        console.log("Activate launch pad sound suppression system");}
    else if (x===31){
        console.log("Ground launch sequencer is go for auto sequence start");}
    else if (x===50){
        console.log("Orbiter transfers from ground to internal power");}
    else {
        console.log("T-"+x+" seconds");}

x = x-1;

}
{% endhighlight %}

Output should look like...

T-60 seconds

T-59 seconds

T-58 seconds

...

T-51 seconds

Orbiter transfers from ground to internal power

T-49 seconds

...

T-3 seconds

T-2 seconds

T-1 seconds

Solid rocket booster ignition and liftoff!

## For Loops

The `for loop` explicitly forces you to define the start point, stop point, and each step of the loop. In fact, you'll get an `Uncaught SyntaxError: Unexpected token )` if you leave out any of the three required pieces.

{% highlight js %}
for ( start; stop; step ) {
  // do this thing
}
{% endhighlight %}

Here's an example of a for loop that prints out the values from 0 to 5. Notice the semicolons separating the different statements of the for loop: `var i = 0`; `i < 6`; `i = i + 1`

{% highlight js %}
for (var i = 0; i < 6; i = i + 1) {
  console.log("Printing out i = " + i);
}
{% endhighlight %}

Console will print:

  Printing out i = 0

  Printing out i = 1

  Printing out i = 2

  Printing out i = 3

  Printing out i = 4

  Printing out i = 5

![For Loops](/pic/forloops.PNG)

## Nested Loops

Paste this nested loop in your browser and take a look at what it prints out:

{% highlight js %}
for (var x = 0; x < 5; x = x + 1) {
  for (var y = 0; y < 3; y = y + 1) {
    console.log(x + "," + y);
  }
}
{% endhighlight %}

Console will print:

0, 0

0, 1

0, 2

1, 0

1, 1

1, 2

2, 0

2, 1

2, 2

3, 0

3, 1

3, 2

4, 0

4, 1

4, 2

Notice the order that the output is being displayed.

For each value of `x` in the outer loop, the inner for loop executes completely. The outer loop starts with `x = 0`, and then the inner loop completes it's cycle with all values of `y`:

`x = 0 and y = 0, 1, 2 // corresponds to (0, 0), (0, 1), and (0, 2)`

Once the inner loop is done iterating over `y`, then the outer loop continues to the next value, `x = 1`, and the whole process begins again.

`x = 0 and y = 0, 1, 2 // (0, 0) (0, 1) and (0, 2)`

`x = 1 and y = 0, 1, 2 // (1, 0) (1, 1) and (1, 2)`

`x = 2 and y = 0, 1, 2 // (2, 0) (2, 1) and (2, 2)`

etc...

![Nested Loops](/pic/nestedloops.PNG)

## Increment and Decrement

Here is a summary of operators:

  x++ or ++x // same as x = x + 1

  x-- or --x // same as x = x - 1

  x += 3 // same as x = x + 3

  x -= 6 // same as x = x - 6

  x *= 2 // same as x = x * 2

  x /= 5 // same as x = x / 5
