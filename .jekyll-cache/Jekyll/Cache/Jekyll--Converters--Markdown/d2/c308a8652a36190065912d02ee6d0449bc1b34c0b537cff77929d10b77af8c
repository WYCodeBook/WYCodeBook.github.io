I"<h1 id="problem">Problem:</h1>

<p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.</p>

<p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p>

<p><a href="https://leetcode.com/problems/two-sum/">Leetcode - Two Sum</a></p>

<p>Example:</p>

<p>Given nums = [2, 7, 11, 15], target = 9,</p>

<p>Because nums[0] + nums[1] = 2 + 7 = 9,</p>

<p>return [0, 1].</p>

<h1 id="solution">Solution:</h1>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="cm">/*
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
*/</span>
<span class="kd">const</span> <span class="nx">twoSum</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">nums</span><span class="p">,</span> <span class="nx">target</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">number</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">x</span><span class="o">&lt;=</span><span class="nx">nums</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">x</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">y</span><span class="o">=</span><span class="nx">x</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="nx">y</span><span class="o">&lt;=</span><span class="nx">nums</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">y</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">nums</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span> <span class="o">==</span> <span class="nx">target</span> <span class="o">-</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">x</span><span class="p">])</span> <span class="p">{</span>
                <span class="nx">number</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">number</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

:ET